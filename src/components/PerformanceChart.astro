<div class="bg-white dark:bg-gray-900 p-4 rounded-lg shadow-lg mb-6">
  <canvas id="performanceChart" class="w-full h-[400px] cursor-pointer" data-chart="true"></canvas>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Dynamically import Chart.js
    const script = document.createElement('script');
    script.src = 'https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js';
    script.onload = initChart;
    document.head.appendChild(script);
    
    function initChart() {
      const ctx = document.getElementById('performanceChart');
      
      // Data from the article
      const labels = [
        'Factory Settings', 
        'Undervolt -0.05V', 
        'Undervolt -0.075V', 
        'Undervolt -0.10V', 
        'LLC 4, -0.075V', 
        'LLC 3, -0.075V', 
        'Memory Tuning, LLC 3, -0.075V'
      ];
      
      const scores = [1587, 1599, 1612, 1531, 1632, 1529, 1709];
      
      // Create gradient for the bars
      // @ts-ignore - Chart will be available after script loads
      const chart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: labels,
          datasets: [{
            label: 'Cinebench Score',
            data: scores,
            backgroundColor: function(context) {
              const chart = context.chart;
              const {ctx, chartArea} = chart;
              if (!chartArea) {
                return null;
              }
              const gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);
              gradient.addColorStop(0, '#3B82F6');  // Blue
              gradient.addColorStop(1, '#10B981');  // Green
              return gradient;
            },
            borderWidth: 1,
            borderRadius: 6,
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          animation: {
            duration: 2000,
            easing: 'easeOutQuart'
          },
          scales: {
            y: {
              beginAtZero: false,
              min: 1500,
              grid: {
                color: 'rgba(200, 200, 200, 0.2)'
              },
              ticks: {
                font: {
                  family: 'Inter'
                }
              },
              title: {
                display: true,
                text: 'Cinebench Score',
                font: {
                  size: 14,
                  family: 'Inter'
                }
              }
            },
            x: {
              grid: {
                display: false
              },
              ticks: {
                maxRotation: 45,
                minRotation: 45,
                font: {
                  family: 'Inter'
                }
              }
            }
          },
          plugins: {
            legend: {
              display: true,
              position: 'top',
              labels: {
                font: {
                  family: 'Inter'
                },
                boxWidth: 15,
                usePointStyle: true,
              }
            },
            tooltip: {
              backgroundColor: 'rgba(0, 0, 0, 0.8)',
              titleFont: {
                family: 'Inter'
              },
              bodyFont: {
                family: 'Inter'
              },
              callbacks: {
                label: function(context) {
                  return `Score: ${context.parsed.y}`;
                }
              }
            },
            title: {
              display: true,
              text: 'CPU Performance Across Tuning Steps',
              font: {
                size: 18,
                family: 'Inter',
                weight: 'bold'
              },
              padding: {
                top: 10,
                bottom: 20
              }
            }
          }
        }
      });
      
      // Make chart clickable to open in full screen modal
      ctx.addEventListener('click', () => {
        // Store chart data in localStorage to be read by modal
        localStorage.setItem('chart-data', JSON.stringify({
          type: 'performance',
          labels: labels,
          data: scores
        }));
        
        // Trigger the chart modal
        const event = new CustomEvent('open-chart-modal', { 
          detail: { chartType: 'performance' }
        });
        document.dispatchEvent(event);
      });
      
      // Handle theme changes
      const darkModeObserver = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          if (mutation.attributeName === 'class') {
            const isDarkMode = document.documentElement.classList.contains('dark');
            
            chart.options.plugins.title.color = isDarkMode ? '#fff' : '#000';
            chart.options.scales.y.ticks.color = isDarkMode ? '#ccc' : '#666';
            chart.options.scales.x.ticks.color = isDarkMode ? '#ccc' : '#666';
            chart.options.plugins.legend.labels.color = isDarkMode ? '#fff' : '#000';
            
            chart.update();
          }
        });
      });
      
      darkModeObserver.observe(document.documentElement, { attributes: true });
    }
  });
</script> 