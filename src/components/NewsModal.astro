---
// NewsModal.astro - Modal component for displaying news article details
---

<!-- Modal backdrop -->
<div id="news-modal" class="fixed inset-0 z-50 hidden items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm">
  <div class="relative w-full max-w-4xl mx-4 max-h-[90vh] bg-white dark:bg-gray-900 rounded-lg shadow-2xl overflow-hidden">
    <!-- Modal header -->
    <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
      <div class="flex items-center space-x-3">
        <span id="modal-category-badge" class="px-3 py-1 text-sm font-semibold rounded-full"></span>
        <span id="modal-importance-badge" class="px-2 py-1 text-xs font-medium rounded-full"></span>
      </div>
      <div class="flex items-center space-x-2">
        <!-- Navigation buttons -->
        <button id="modal-prev-btn" class="p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors" title="Previous article">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
        </button>
        <button id="modal-next-btn" class="p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors" title="Next article">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
        <!-- Close button -->
        <button id="modal-close-btn" class="p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors" title="Close">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Modal content -->
    <div class="p-6 overflow-y-auto max-h-[calc(90vh-8rem)]">
      <!-- Article title -->
      <h2 id="news-modal-title" class="text-2xl font-bold text-gray-900 dark:text-white mb-4"></h2>
      
      <!-- Article meta information -->
      <div class="flex flex-wrap items-center gap-4 mb-6 text-sm text-gray-600 dark:text-gray-400">
        <div class="flex items-center space-x-2">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
          </svg>
          <span id="news-modal-source"></span>
        </div>
        <div class="flex items-center space-x-2">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
          </svg>
          <span id="news-modal-author"></span>
        </div>
        <div class="flex items-center space-x-2">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <span id="news-modal-date"></span>
        </div>
      </div>

      <!-- Article content -->
      <div class="prose prose-lg dark:prose-invert max-w-none mb-6">
        <p id="news-modal-content" class="text-gray-700 dark:text-gray-300 leading-relaxed"></p>
      </div>

      <!-- Article tags -->
      <div id="modal-tags-container" class="mb-6">
        <div class="flex flex-wrap gap-2" id="modal-tags"></div>
      </div>

      <!-- Action buttons -->
      <div class="flex flex-wrap gap-3 pt-4 border-t border-gray-200 dark:border-gray-700">
        <a id="modal-read-more" href="#" target="_blank" rel="noopener noreferrer" 
           class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
          </svg>
          Read Full Article
        </a>
        <button id="modal-share" class="inline-flex items-center px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white font-medium rounded-lg transition-colors">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
          </svg>
          Share
        </button>
      </div>
    </div>
  </div>
</div>

<script is:inline>
  // @ts-nocheck
  (function() {
    class NewsModal {
      constructor() {
        this.modal = document.getElementById('news-modal');
        this.articles = [];
        this.currentIndex = 0;
        this.init();
      }

      init() {
        this.setupEventListeners();
      }

      setupEventListeners() {
        // Listen for custom event from ticker
        document.addEventListener('openNewsModal', (e) => {
          this.articles = e.detail.articles;
          const article = e.detail.article;
          this.currentIndex = this.articles.findIndex(a => a.id === article.id);
          this.showModal(article);
        });

        // Close button
        document.getElementById('modal-close-btn').addEventListener('click', () => {
          this.hideModal();
        });

        // Navigation buttons
        document.getElementById('modal-prev-btn').addEventListener('click', () => {
          this.navigateModal(-1);
        });

        document.getElementById('modal-next-btn').addEventListener('click', () => {
          this.navigateModal(1);
        });

        // Close on backdrop click
        this.modal.addEventListener('click', (e) => {
          if (e.target === this.modal) {
            this.hideModal();
          }
        });

        // Close on ESC key
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && !this.modal.classList.contains('hidden')) {
            this.hideModal();
          }
          if (e.key === 'ArrowLeft' && !this.modal.classList.contains('hidden')) {
            this.navigateModal(-1);
          }
          if (e.key === 'ArrowRight' && !this.modal.classList.contains('hidden')) {
            this.navigateModal(1);
          }
        });

        // Share button
        document.getElementById('modal-share').addEventListener('click', () => {
          this.shareArticle();
        });
      }

      showModal(article) {
        this.populateModal(article);
        this.modal.classList.remove('hidden');
        this.modal.classList.add('flex');
        document.body.style.overflow = 'hidden';
      }

      hideModal() {
        this.modal.classList.add('hidden');
        this.modal.classList.remove('flex');
        document.body.style.overflow = '';
        
        // Dispatch close event for ticker to resume
        const closeEvent = new CustomEvent('closeNewsModal');
        document.dispatchEvent(closeEvent);
      }

      navigateModal(direction) {
        if (!this.articles.length) return;
        
        this.currentIndex = (this.currentIndex + direction + this.articles.length) % this.articles.length;
        const article = this.articles[this.currentIndex];
        this.populateModal(article);
      }

      populateModal(article) {
        console.log('Populating modal with article:', article);
        
        // Category badge
        const categoryInfo = this.getCategoryInfo(article.category);
        const categoryBadge = document.getElementById('modal-category-badge');
        categoryBadge.textContent = categoryInfo.icon + ' ' + categoryInfo.name;
        categoryBadge.className = 'px-3 py-1 text-sm font-semibold rounded-full ' + categoryInfo.color;

        // Importance badge
        const importanceInfo = this.getImportanceInfo(article.importance);
        const importanceBadge = document.getElementById('modal-importance-badge');
        importanceBadge.textContent = importanceInfo.icon + ' ' + importanceInfo.name;
        importanceBadge.className = 'px-2 py-1 text-xs font-medium rounded-full ' + importanceInfo.color;

        // Article details
        document.getElementById('news-modal-title').textContent = article.title || 'Untitled Article';
        document.getElementById('news-modal-source').textContent = article.source || 'Unknown Source';
        document.getElementById('news-modal-author').textContent = article.author ? ('By ' + article.author) : 'Unknown Author';
        document.getElementById('news-modal-date').textContent = this.formatDate(article.published_date);
        
        // Handle content preview - show fallback only if truly empty
        const content = article.content_preview || '';
        console.log('Article content_preview:', content);
        console.log('Content length:', content.trim().length);
        
        // Wait a moment for the modal to be fully rendered, then set content
        setTimeout(() => {
          const contentElement = document.getElementById('news-modal-content');
          console.log('Content element found:', contentElement);
          
          if (!contentElement) {
            console.error('news-modal-content element not found!');
            return;
          }
          
          if (content.trim().length === 0) {
            contentElement.innerHTML = '<em class="text-gray-500">No preview available. Click "Read Full Article" to view the complete story.</em>';
          } else {
            contentElement.textContent = content;
            console.log('Content set to element. Element content now:', contentElement.textContent);
            console.log('Element innerHTML:', contentElement.innerHTML);
          }
        }, 50);

        // Tags
        const tagsContainer = document.getElementById('modal-tags');
        tagsContainer.innerHTML = '';
        if (article.tags && article.tags.length > 0) {
          article.tags.forEach(tag => {
            const tagElement = document.createElement('span');
            tagElement.className = 'px-2 py-1 text-xs bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full';
            tagElement.textContent = '#' + tag;
            tagsContainer.appendChild(tagElement);
          });
        }

        // Read more link
        document.getElementById('modal-read-more').href = article.url;

        // Update navigation buttons
        document.getElementById('modal-prev-btn').style.opacity = this.articles.length > 1 ? '1' : '0.5';
        document.getElementById('modal-next-btn').style.opacity = this.articles.length > 1 ? '1' : '0.5';
      }

      getCategoryInfo(category) {
        const categoryMap = {
          'bitcoin': { 
            name: 'Bitcoin', 
            color: 'bg-orange-500 text-white',
            icon: '₿'
          },
          'software_dev': { 
            name: 'Software Development', 
            color: 'bg-blue-500 text-white',
            icon: '💻'
          },
          'ai_progress': { 
            name: 'AI Progress', 
            color: 'bg-purple-500 text-white',
            icon: '🤖'
          }
        };
        
        return categoryMap[category] || { 
          name: 'News', 
          color: 'bg-gray-500 text-white',
          icon: '📰'
        };
      }

      getImportanceInfo(importance) {
        const importanceMap = {
          'high': { 
            name: 'High', 
            color: 'bg-red-500 text-white',
            icon: '🔥'
          },
          'medium': { 
            name: 'Medium', 
            color: 'bg-yellow-500 text-white',
            icon: '⚡'
          },
          'low': { 
            name: 'Low', 
            color: 'bg-green-500 text-white',
            icon: '📝'
          }
        };
        
        return importanceMap[importance] || { 
          name: 'Normal', 
          color: 'bg-gray-500 text-white',
          icon: '📰'
        };
      }

      formatDate(dateString) {
        try {
          const date = new Date(dateString);
          return date.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
          });
        } catch (error) {
          return 'Unknown date';
        }
      }

      shareArticle() {
        const article = this.articles[this.currentIndex];
        if (!article) return;

        if (navigator.share) {
          navigator.share({
            title: article.title,
            text: article.content_preview,
            url: article.url
          });
        } else {
          // Fallback: copy to clipboard
          const shareText = article.title + ' - ' + article.url;
          navigator.clipboard.writeText(shareText).then(() => {
            // Show temporary feedback
            const shareBtn = document.getElementById('modal-share');
            const originalText = shareBtn.innerHTML;
            shareBtn.innerHTML = '<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>Copied!';
            setTimeout(() => {
              shareBtn.innerHTML = originalText;
            }, 2000);
          });
        }
      }
    }

    // Initialize the modal when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
      new NewsModal();
    });
  })();
</script> 