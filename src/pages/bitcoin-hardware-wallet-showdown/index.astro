---
import Layout from '../../layouts/Layout.astro';
import walletData from '../../config/bitcoin_wallet_showdown_2025-05-26.json';

// Sort wallets by security score (desc) then price (asc) for synopsis section
const sortedWallets = [...walletData].sort((a, b) => {
  if (b.security_score !== a.security_score) {
    return b.security_score - a.security_score;
  }
  return a.price_usd - b.price_usd;
});

// Filter only active wallets for the main display
const activeWallets = walletData.filter(wallet => wallet.status === 'active');
---

<Layout title="Bitcoin Hardware Wallet Showdown 2025">
  <main class="container mx-auto px-4 py-8 pt-24">
    <h1 class="text-4xl font-bold text-center mb-8 text-gray-900 dark:text-gray-100">Bitcoin Hardware Wallet Showdown 2025</h1>
    
    <!-- Introduction Section -->
    <section class="mb-12">
      <div class="prose prose-lg max-w-4xl mx-auto">
        <h2 class="text-2xl font-semibold mb-6 text-gray-900 dark:text-gray-100">Finding Your Perfect Hardware Wallet</h2>
        
        <p class="mb-6 text-gray-700 dark:text-gray-300">
          Choosing the right hardware wallet is a deeply personal decision that depends on your security needs, 
          technical expertise, and usage patterns. While all hardware wallets provide significantly better security 
          than software wallets, they each have distinct strengths and trade-offs.
        </p>

        <h3 class="text-xl font-semibold mb-4 text-gray-900 dark:text-gray-100">Common Strengths Across Hardware Wallets</h3>
        <ul class="mb-6 text-gray-700 dark:text-gray-300">
          <li><strong class="text-gray-900 dark:text-gray-100">Private Key Isolation:</strong> Your private keys never leave the device</li>
          <li><strong class="text-gray-900 dark:text-gray-100">Transaction Verification:</strong> Visual confirmation of transaction details on device screen</li>
          <li><strong class="text-gray-900 dark:text-gray-100">Malware Resistance:</strong> Protection against compromised computers</li>
          <li><strong class="text-gray-900 dark:text-gray-100">Multi-signature Support:</strong> Most support advanced security setups</li>
          <li><strong class="text-gray-900 dark:text-gray-100">Backup & Recovery:</strong> Standardized seed phrase recovery across devices</li>
        </ul>

        <h3 class="text-xl font-semibold mb-4 text-gray-900 dark:text-gray-100">Key Considerations & Trade-offs</h3>
        <div class="grid md:grid-cols-2 gap-6 mb-8">
          <div>
            <h4 class="font-semibold mb-2 text-gray-900 dark:text-gray-100">Security Architecture</h4>
            <p class="text-sm text-gray-700 dark:text-gray-300">
              <strong class="text-gray-900 dark:text-gray-100">Secure Elements</strong> provide hardware-level protection against physical attacks but are often closed-source. 
              <strong class="text-gray-900 dark:text-gray-100">Open-source firmware</strong> allows community auditing but may lack specialized hardware protections.
            </p>
          </div>
          <div>
            <h4 class="font-semibold mb-2 text-gray-900 dark:text-gray-100">Connectivity</h4>
            <p class="text-sm text-gray-700 dark:text-gray-300">
              <strong class="text-gray-900 dark:text-gray-100">Air-gapped wallets</strong> (QR codes, microSD) offer maximum security but require more steps. 
              <strong class="text-gray-900 dark:text-gray-100">USB/Bluetooth</strong> connections are convenient but increase potential attack surface.
            </p>
          </div>
          <div>
            <h4 class="font-semibold mb-2 text-gray-900 dark:text-gray-100">User Experience</h4>
            <p class="text-sm text-gray-700 dark:text-gray-300">
              <strong class="text-gray-900 dark:text-gray-100">Touchscreens</strong> improve usability but add complexity. 
              <strong class="text-gray-900 dark:text-gray-100">Button-only interfaces</strong> are simpler but can be cumbersome for complex operations.
            </p>
          </div>
          <div>
            <h4 class="font-semibold mb-2 text-gray-900 dark:text-gray-100">Coin Support</h4>
            <p class="text-sm text-gray-700 dark:text-gray-300">
              <strong class="text-gray-900 dark:text-gray-100">Bitcoin-only wallets</strong> have smaller attack surface and focused development. 
              <strong class="text-gray-900 dark:text-gray-100">Multi-coin wallets</strong> offer flexibility but increased complexity.
            </p>
          </div>
        </div>
      </div>
    </section>

    <!-- Wallet Comparison Table -->
    <section class="mb-12">
      <div class="flex justify-between items-center mb-6">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-gray-100">Hardware Wallet Comparison</h2>
        <button 
          id="compare-btn" 
          class="bg-orange-500 hover:bg-orange-600 dark:bg-orange-600 dark:hover:bg-orange-700 text-white px-6 py-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed"
          disabled
        >
          Compare Selected (0/4)
        </button>
      </div>
      
      <div class="overflow-x-auto">
        <table id="wallet-table" class="w-full border-collapse border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800">
          <thead>
            <tr class="bg-gray-100 dark:bg-gray-700">
              <th class="border border-gray-300 dark:border-gray-600 p-3 text-left text-gray-900 dark:text-gray-100">
                <input type="checkbox" id="select-all" class="mr-2">
                Select
              </th>
              <th class="border border-gray-300 dark:border-gray-600 p-3 text-left cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-900 dark:text-gray-100" data-sort="name">
                Name ↕
              </th>
              <th class="border border-gray-300 dark:border-gray-600 p-3 text-left cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-900 dark:text-gray-100" data-sort="vendor">
                Vendor ↕
              </th>
              <th class="border border-gray-300 dark:border-gray-600 p-3 text-left cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-900 dark:text-gray-100" data-sort="price_usd">
                Price (USD) ↕
              </th>
              <th class="border border-gray-300 dark:border-gray-600 p-3 text-left cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-900 dark:text-gray-100" data-sort="security_score">
                Security Score ↕
              </th>
              <th class="border border-gray-300 dark:border-gray-600 p-3 text-center text-gray-900 dark:text-gray-100">Beginner Friendly</th>
              <th class="border border-gray-300 dark:border-gray-600 p-3 text-center text-gray-900 dark:text-gray-100">Multi-sig</th>
              <th class="border border-gray-300 dark:border-gray-600 p-3 text-center text-gray-900 dark:text-gray-100">Advanced Features</th>
            </tr>
          </thead>
          <tbody id="wallet-tbody">
            {activeWallets.map((wallet, index) => (
              <tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
                <td class="border border-gray-300 dark:border-gray-600 p-3">
                  <input 
                    type="checkbox" 
                    class="wallet-checkbox" 
                    data-wallet-index={index}
                    data-wallet-name={wallet.name}
                  >
                </td>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-medium text-gray-900 dark:text-gray-100">{wallet.name}</td>
                <td class="border border-gray-300 dark:border-gray-600 p-3 text-gray-700 dark:text-gray-300">{wallet.vendor}</td>
                <td class="border border-gray-300 dark:border-gray-600 p-3 text-gray-700 dark:text-gray-300">${wallet.price_usd}</td>
                <td class="border border-gray-300 dark:border-gray-600 p-3">
                  <span class={`inline-block px-2 py-1 rounded text-white text-sm ${
                    wallet.security_score >= 9 ? 'bg-green-500' :
                    wallet.security_score >= 7 ? 'bg-yellow-500' : 'bg-red-500'
                  }`}>
                    {wallet.security_score}/10
                  </span>
                </td>
                <td class="border border-gray-300 dark:border-gray-600 p-3 text-center">
                  {wallet.complexity.beginner_friendly ? 
                    <span class="text-green-500 text-xl">✓</span> : 
                    <span class="text-red-500 text-xl">✗</span>
                  }
                </td>
                <td class="border border-gray-300 dark:border-gray-600 p-3 text-center">
                  {wallet.complexity.multi_sig_supported === true ? 
                    <span class="text-green-500 text-xl">✓</span> : 
                    wallet.complexity.multi_sig_supported === "limited" ?
                    <span class="text-yellow-500 text-xl">~</span> :
                    <span class="text-red-500 text-xl">✗</span>
                  }
                </td>
                <td class="border border-gray-300 dark:border-gray-600 p-3 text-center">
                  {wallet.complexity.advanced_features === true ? 
                    <span class="text-green-500 text-xl">✓</span> : 
                    wallet.complexity.advanced_features === "limited" ?
                    <span class="text-yellow-500 text-xl">~</span> :
                    <span class="text-red-500 text-xl">✗</span>
                  }
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </section>

    <!-- Wallet Synopsis Section -->
    <section class="mb-12">
      <h2 class="text-2xl font-semibold mb-6 text-gray-900 dark:text-gray-100">Detailed Wallet Reviews</h2>
      <p class="text-gray-600 dark:text-gray-400 mb-8">Wallets ordered by security score, then price</p>
      
      <div class="grid gap-8">
        {sortedWallets.filter(wallet => wallet.status === 'active').map((wallet) => (
          <div class="border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 rounded-lg p-6 hover:shadow-lg dark:hover:shadow-gray-900/20 transition-shadow">
            <div class="flex flex-col md:flex-row gap-6">
              <div class="md:w-32 flex-shrink-0">
                <img 
                  src={wallet.thumbnail_image} 
                  alt={wallet.name}
                  class="w-full h-24 object-contain rounded"
                  loading="lazy"
                />
              </div>
              
              <div class="flex-grow">
                <div class="flex flex-wrap items-center gap-4 mb-3">
                  <h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100">{wallet.name}</h3>
                  <span class="text-gray-600 dark:text-gray-400">by {wallet.vendor}</span>
                  <span class="font-bold text-lg text-gray-900 dark:text-gray-100">${wallet.price_usd}</span>
                  <span class={`px-2 py-1 rounded text-white text-sm ${
                    wallet.security_score >= 9 ? 'bg-green-500' :
                    wallet.security_score >= 7 ? 'bg-yellow-500' : 'bg-red-500'
                  }`}>
                    Security: {wallet.security_score}/10
                  </span>
                </div>
                
                <p class="text-gray-700 dark:text-gray-300 mb-4">{wallet.summary}</p>
                
                <div class="grid md:grid-cols-2 gap-4 mb-4">
                  <div>
                    <h4 class="font-semibold text-green-600 dark:text-green-400 mb-2">Strengths:</h4>
                    <ul class="text-sm space-y-1">
                      {wallet.strengths.map((strength) => (
                        <li class="flex items-start text-gray-700 dark:text-gray-300">
                          <span class="text-green-500 mr-2">•</span>
                          {strength}
                        </li>
                      ))}
                    </ul>
                  </div>
                  
                  <div>
                    <h4 class="font-semibold text-red-600 dark:text-red-400 mb-2">Weaknesses:</h4>
                    <ul class="text-sm space-y-1">
                      {wallet.weaknesses.map((weakness) => (
                        <li class="flex items-start text-gray-700 dark:text-gray-300">
                          <span class="text-red-500 mr-2">•</span>
                          {weakness}
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
                
                <div class="text-sm text-gray-600 dark:text-gray-400 mb-3">
                  <strong class="text-gray-900 dark:text-gray-100">Display:</strong> {wallet.display} | 
                  <strong class="text-gray-900 dark:text-gray-100">Power:</strong> {wallet.power} |
                  <strong class="text-gray-900 dark:text-gray-100">Released:</strong> {wallet.first_release}
                </div>
                
                <div class="text-xs text-gray-500 dark:text-gray-400 italic">
                  {wallet.security_rationale}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>
  </main>

  <!-- Comparison Modal -->
  <div id="comparison-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white dark:bg-gray-800 rounded-lg max-w-7xl w-full max-h-[90vh] overflow-hidden border border-gray-200 dark:border-gray-700">
        <div class="flex justify-between items-center p-6 border-b border-gray-200 dark:border-gray-700">
          <h2 class="text-2xl font-semibold text-gray-900 dark:text-gray-100">Hardware Wallet Comparison</h2>
          <button id="close-modal" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 text-2xl">&times;</button>
        </div>
        <div id="comparison-content" class="p-6 overflow-auto max-h-[calc(90vh-120px)]">
          <!-- Comparison table will be inserted here -->
        </div>
      </div>
    </div>
  </div>

  <script define:vars={{ walletData: activeWallets }}>
    // Wallet data for JavaScript
    let selectedWallets = [];
    let sortDirection = {};

    // Initialize table sorting
    document.addEventListener('DOMContentLoaded', function() {
      const table = document.getElementById('wallet-table');
      const tbody = document.getElementById('wallet-tbody');
      const compareBtn = document.getElementById('compare-btn');
      const modal = document.getElementById('comparison-modal');
      const closeModal = document.getElementById('close-modal');
      const selectAll = document.getElementById('select-all');

      // Sort functionality
      table?.addEventListener('click', function(e) {
        const target = e.target;
        const sortKey = target?.getAttribute?.('data-sort');
        if (sortKey) {
          sortTable(sortKey);
        }
      });

      // Checkbox functionality
      tbody?.addEventListener('change', function(e) {
        const target = e.target;
        if (target?.classList?.contains('wallet-checkbox')) {
          updateSelectedWallets();
        }
      });

      // Select all functionality
      selectAll?.addEventListener('change', function() {
        const checkboxes = document.querySelectorAll('.wallet-checkbox');
        const shouldCheck = this.checked && selectedWallets.length < 4;
        
        checkboxes.forEach((checkbox) => {
          if (shouldCheck && selectedWallets.length < 4) {
            checkbox.checked = true;
          } else if (!shouldCheck) {
            checkbox.checked = false;
          }
        });
        updateSelectedWallets();
      });

      // Compare button
      compareBtn?.addEventListener('click', function() {
        if (selectedWallets.length >= 2) {
          showComparison();
        }
      });

      // Modal close
      closeModal?.addEventListener('click', function() {
        modal?.classList.add('hidden');
      });

      modal?.addEventListener('click', function(e) {
        if (e.target === modal) {
          modal.classList.add('hidden');
        }
      });
    });

    function sortTable(key) {
      const tbody = document.getElementById('wallet-tbody');
      if (!tbody) return;
      
      const rows = Array.from(tbody.querySelectorAll('tr'));
      
      // Toggle sort direction
      sortDirection[key] = sortDirection[key] === 'asc' ? 'desc' : 'asc';
      
      rows.sort((a, b) => {
        const aCheckbox = a.querySelector('.wallet-checkbox');
        const bCheckbox = b.querySelector('.wallet-checkbox');
        
        if (!aCheckbox || !bCheckbox) return 0;
        
        const aIndex = parseInt(aCheckbox.getAttribute('data-wallet-index') || '0');
        const bIndex = parseInt(bCheckbox.getAttribute('data-wallet-index') || '0');
        
        let aVal = walletData[aIndex][key];
        let bVal = walletData[bIndex][key];
        
        // Handle different data types
        if (typeof aVal === 'string') {
          aVal = aVal.toLowerCase();
          bVal = bVal.toLowerCase();
        }
        
        if (sortDirection[key] === 'asc') {
          return aVal > bVal ? 1 : -1;
        } else {
          return aVal < bVal ? 1 : -1;
        }
      });
      
      // Clear and re-append sorted rows
      tbody.innerHTML = '';
      rows.forEach(row => tbody.appendChild(row));
      
      // Update sort indicators
      document.querySelectorAll('[data-sort]').forEach(th => {
        th.textContent = th.textContent.replace(/ [↑↓↕]/, '');
        if (th.getAttribute('data-sort') === key) {
          th.textContent += sortDirection[key] === 'asc' ? ' ↑' : ' ↓';
        } else {
          th.textContent += ' ↕';
        }
      });
    }

    function updateSelectedWallets() {
      const checkboxes = document.querySelectorAll('.wallet-checkbox:checked');
      selectedWallets = Array.from(checkboxes).map(cb => {
        const index = parseInt(cb.getAttribute('data-wallet-index') || '0');
        return walletData[index];
      });
      
      const compareBtn = document.getElementById('compare-btn');
      if (compareBtn) {
        compareBtn.textContent = `Compare Selected (${selectedWallets.length}/4)`;
        compareBtn.disabled = selectedWallets.length < 2;
      }
      
      // Disable unchecked checkboxes if we have 4 selected
      const uncheckedBoxes = document.querySelectorAll('.wallet-checkbox:not(:checked)');
      uncheckedBoxes.forEach(cb => {
        cb.disabled = selectedWallets.length >= 4;
      });
      
      // Update select all checkbox
      const selectAll = document.getElementById('select-all');
      const allCheckboxes = document.querySelectorAll('.wallet-checkbox');
      if (selectAll) {
        selectAll.checked = selectedWallets.length > 0 && selectedWallets.length === allCheckboxes.length;
      }
    }

    function showComparison() {
      const modal = document.getElementById('comparison-modal');
      const content = document.getElementById('comparison-content');
      
      if (!modal || !content) return;
      
      let html = `
        <div class="overflow-x-auto">
          <table class="w-full border-collapse border border-gray-300 dark:border-gray-600 text-sm bg-white dark:bg-gray-800">
            <thead>
              <tr class="bg-gray-100 dark:bg-gray-700">
                <th class="border border-gray-300 dark:border-gray-600 p-3 text-left font-semibold text-gray-900 dark:text-gray-100">Feature</th>
                ${selectedWallets.map(wallet => `
                  <th class="border border-gray-300 dark:border-gray-600 p-3 text-center font-semibold min-w-[200px] text-gray-900 dark:text-gray-100">
                    <div class="flex flex-col items-center">
                      <img src="${wallet.thumbnail_image}" alt="${wallet.name}" class="w-16 h-12 object-contain mb-2">
                      <div>${wallet.name}</div>
                      <div class="text-xs text-gray-600 dark:text-gray-400">${wallet.vendor}</div>
                    </div>
                  </th>
                `).join('')}
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">Price</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3 text-center font-bold text-lg text-gray-900 dark:text-gray-100">$${wallet.price_usd}</td>
                `).join('')}
              </tr>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">Security Score</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3 text-center">
                    <span class="px-2 py-1 rounded text-white text-sm ${
                      wallet.security_score >= 9 ? 'bg-green-500' :
                      wallet.security_score >= 7 ? 'bg-yellow-500' : 'bg-red-500'
                    }">
                      ${wallet.security_score}/10
                    </span>
                  </td>
                `).join('')}
              </tr>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">Beginner Friendly</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3 text-center">
                    ${wallet.complexity.beginner_friendly ? 
                      '<span class="text-green-500 text-xl">✓</span>' : 
                      '<span class="text-red-500 text-xl">✗</span>'
                    }
                  </td>
                `).join('')}
              </tr>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">Multi-sig Support</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3 text-center">
                    ${wallet.complexity.multi_sig_supported === true ? 
                      '<span class="text-green-500 text-xl">✓</span>' : 
                      wallet.complexity.multi_sig_supported === "limited" ?
                      '<span class="text-yellow-500 text-xl">~</span>' :
                      '<span class="text-red-500 text-xl">✗</span>'
                    }
                  </td>
                `).join('')}
              </tr>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">Advanced Features</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3 text-center">
                    ${wallet.complexity.advanced_features === true ? 
                      '<span class="text-green-500 text-xl">✓</span>' : 
                      wallet.complexity.advanced_features === "limited" ?
                      '<span class="text-yellow-500 text-xl">~</span>' :
                      '<span class="text-red-500 text-xl">✗</span>'
                    }
                  </td>
                `).join('')}
              </tr>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">Display</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3 text-center text-gray-900 dark:text-gray-100">${wallet.display}</td>
                `).join('')}
              </tr>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">Power</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3 text-center text-gray-900 dark:text-gray-100">${wallet.power}</td>
                `).join('')}
              </tr>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">First Release</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3 text-center text-gray-900 dark:text-gray-100">${wallet.first_release}</td>
                `).join('')}
              </tr>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">Summary</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3 text-sm text-gray-700 dark:text-gray-300">${wallet.summary}</td>
                `).join('')}
              </tr>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">Strengths</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3">
                    <ul class="text-sm space-y-1">
                      ${wallet.strengths.map(strength => `
                        <li class="flex items-start text-gray-700 dark:text-gray-300">
                          <span class="text-green-500 mr-1">•</span>
                          ${strength}
                        </li>
                      `).join('')}
                    </ul>
                  </td>
                `).join('')}
              </tr>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">Weaknesses</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3">
                    <ul class="text-sm space-y-1">
                      ${wallet.weaknesses.map(weakness => `
                        <li class="flex items-start text-gray-700 dark:text-gray-300">
                          <span class="text-red-500 mr-1">•</span>
                          ${weakness}
                        </li>
                      `).join('')}
                    </ul>
                  </td>
                `).join('')}
              </tr>
              <tr>
                <td class="border border-gray-300 dark:border-gray-600 p-3 font-semibold bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100">Security Rationale</td>
                ${selectedWallets.map(wallet => `
                  <td class="border border-gray-300 dark:border-gray-600 p-3 text-sm italic text-gray-700 dark:text-gray-300">${wallet.security_rationale}</td>
                `).join('')}
              </tr>
            </tbody>
          </table>
        </div>
      `;
      
      content.innerHTML = html;
      modal.classList.remove('hidden');
    }
  </script>
</Layout> 